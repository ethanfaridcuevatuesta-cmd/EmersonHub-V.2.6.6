-- Emerson Hub V2.6.6 (LocalScript)  -- STUDIO (StarterPlayerScripts)
-- Mantiene UI exactamente como en V2.6.2 visualmente.
-- Cambios solicitados: Multi Jump -> saltos normales + hold = ascenso controlado.
-- Confirmación usando estilo V2.6.3 (StarterGui:SetCore SendNotification).
-- LeftCtrl minimiza/restaura el panel.
-- USAR EN ROBLOX STUDIO PARA PRUEBAS.

-- Servicios
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

-- referenciar jugador
local LocalPlayer = Players.LocalPlayer

-- espera robusta PlayerGui (para inyección tardía en algunos entornos)
local function waitPlayerGui(timeout)
    timeout = timeout or 10
    local t0 = tick()
    while (not LocalPlayer or not LocalPlayer.Parent) and tick() - t0 < timeout do
        task.wait(0.03)
        LocalPlayer = Players.LocalPlayer
    end
    if not LocalPlayer then return nil end
    local t1 = tick()
    while not LocalPlayer:FindFirstChild("PlayerGui") and tick() - t1 < timeout do
        task.wait(0.03)
    end
    return LocalPlayer and LocalPlayer:FindFirstChild("PlayerGui")
end

local PlayerGui = waitPlayerGui(12)
if not PlayerGui then
    warn("[Emerson v2.6.6] No se encontró PlayerGui. Abortando.")
    return
end

-- =============== Confirmación (estilo V2.6.3) ===============
local function ShowConfirmation_V263(msg)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = "Emerson Hub",
            Text = msg,
            Duration = 2
        })
    end)
end
local function LocalShow(msg) pcall(ShowConfirmation_V263, msg) end

-- =============== UI (idéntica a V2.6.2) ===============
local function createUI()
    local gui = Instance.new("ScreenGui")
    gui.Name = "EmersonHub_v2_6_6"
    gui.ResetOnSpawn = false
    gui.Parent = PlayerGui

    local frame = Instance.new("Frame", gui)
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 260, 0, 300)
    frame.Position = UDim2.new(0.35, 0, 0.22, 0)
    frame.BackgroundColor3 = Color3.fromRGB(255,255,255)
    frame.BorderSizePixel = 0
    local rc = Instance.new("UICorner", frame); rc.CornerRadius = UDim.new(0,8)

    local titleBar = Instance.new("Frame", frame)
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1,0,0,36)
    titleBar.Position = UDim2.new(0,0,0,0)
    titleBar.BackgroundTransparency = 1

    local titleLabel = Instance.new("TextLabel", titleBar)
    titleLabel.Size = UDim2.new(0.85,0,1,0)
    titleLabel.Position = UDim2.new(0,6,0,0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.Gotham
    titleLabel.TextScaled = true
    titleLabel.Text = "🦷 Emerson Hub — v2.6.6"
    titleLabel.TextColor3 = Color3.fromRGB(0,0,0)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local toothBtn = Instance.new("TextButton", titleBar)
    toothBtn.Size = UDim2.new(0.14, -8, 0.9, 0)
    toothBtn.Position = UDim2.new(0.86, 4, 0.05, 0)
    toothBtn.Text = "🦷"; toothBtn.Font = Enum.Font.SourceSans; toothBtn.TextScaled = true; toothBtn.BackgroundTransparency = 1

    local miniBtn = Instance.new("TextButton", gui)
    miniBtn.Name = "MiniBtn"
    miniBtn.Size = UDim2.new(0, 44, 0, 44)
    miniBtn.Position = frame.Position
    miniBtn.Text = "🦷"
    miniBtn.Font = Enum.Font.SourceSans
    miniBtn.TextScaled = true
    miniBtn.BackgroundTransparency = 0.2
    miniBtn.Visible = false
    local miniRC = Instance.new("UICorner", miniBtn); miniRC.CornerRadius = UDim.new(0,8)

    local Scroll = Instance.new("ScrollingFrame", frame)
    Scroll.Name = "OptionsScroll"
    Scroll.Size = UDim2.new(1, -16, 1, -56)
    Scroll.Position = UDim2.new(0,8,0,40)
    Scroll.BackgroundTransparency = 1
    Scroll.ScrollBarThickness = 6
    local layout = Instance.new("UIListLayout", Scroll); layout.Padding = UDim.new(0,8); layout.SortOrder = Enum.SortOrder.LayoutOrder
    local pad = Instance.new("UIPadding", Scroll); pad.PaddingLeft = UDim.new(0,6); pad.PaddingRight = UDim.new(0,6); pad.PaddingTop = UDim.new(0,6)

    -- rainbow driver
    local rainbow = {h = 0, col = Color3.fromRGB(255,0,0)}
    task.spawn(function()
        while true do
            rainbow.h = (rainbow.h + 3) % 360
            rainbow.col = Color3.fromHSV(rainbow.h/360, 1, 1)
            task.wait(0.04)
        end
    end)

    local function CreateOption(name, callback)
        local rect = Instance.new("Frame", Scroll)
        rect.Name = "OptRect_"..name:gsub("%s+","")
        rect.Size = UDim2.new(1,0,0,36)
        rect.BackgroundColor3 = Color3.fromRGB(119,136,153)
        rect.BorderSizePixel = 0
        local rcc = Instance.new("UICorner", rect); rcc.CornerRadius = UDim.new(0,6)
        local stroke = Instance.new("UIStroke", rect); stroke.Thickness = 2
        local btn = Instance.new("TextButton", rect)
        btn.Size = UDim2.new(1,-8,1,-8); btn.Position = UDim2.new(0,4,0,4)
        btn.BackgroundTransparency = 1
        btn.Font = Enum.Font.SourceSans
        btn.TextScaled = true
        btn.Text = name
        btn.TextColor3 = rainbow.col
        btn.AutoButtonColor = true
        if callback then btn.MouseButton1Click:Connect(function() pcall(callback) end) end
        task.spawn(function()
            while rect.Parent do
                stroke.Color = rainbow.col
                if btn.Parent then btn.TextColor3 = rainbow.col end
                task.wait(0.04)
            end
        end)
        return rect, btn
    end

    -- draggable behavior
    local dragging, dragStart, startPos
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    UIS.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    local minimized = false
    local function minimize() minimized = true; frame.Visible = false; miniBtn.Position = frame.Position; miniBtn.Visible = true end
    local function restore() minimized = false; frame.Visible = true; miniBtn.Visible = false end
    toothBtn.MouseButton1Click:Connect(function() if minimized then restore() else minimize() end end)
    miniBtn.MouseButton1Click:Connect(function() restore() end)

    return {
        Gui = gui,
        Frame = frame,
        Scroll = Scroll,
        CreateOption = CreateOption,
        ShowMessage = LocalShow
    }
end

local UI = createUI()

-- =============== Variables y bindCharacter ===============
local savedPos = nil
local multiJumpEnabled = false
local holdingJump = false
local lastHoldPulse = 0
local speedBoostEnabled = false
local noclipEnabled = false
local char, humanoid, rootPart

local function bindCharacter(c)
    char = c
    humanoid = c:FindFirstChildOfClass("Humanoid") or c:WaitForChild("Humanoid")
    rootPart = c:FindFirstChild("HumanoidRootPart") or c:WaitForChild("HumanoidRootPart")
    if _G.Emerson_SpeedBoost_Active and humanoid then
        pcall(function() humanoid.WalkSpeed = 48 end)
    else
        pcall(function() humanoid.WalkSpeed = 16 end)
    end
end
Players.LocalPlayer.CharacterAdded:Connect(bindCharacter)
if Players.LocalPlayer.Character then bindCharacter(Players.LocalPlayer.Character) end

-- =============== Opciones (texto y comportamiento conservados) ===============
UI.CreateOption("Guardar TP 1", function()
    if rootPart and rootPart.CFrame then
        savedPos = rootPart.CFrame
        UI.ShowMessage("📍 TP 1 guardado")
    else
        UI.ShowMessage("⚠️ No se pudo guardar posición")
    end
end)

UI.CreateOption("Ir a TP 1", function()
    if savedPos and rootPart then
        pcall(function() rootPart.CFrame = savedPos end)
        UI.ShowMessage("✅ Teletransportado a TP 1")
    else
        UI.ShowMessage("⚠️ No hay TP guardado")
    end
end)

-- =============== Multi-Jump (comportamiento solicitado) ===============
-- Taps => normal jump (no big velocity)
-- Rapid taps => consecutive normal jumps (sin límite)
-- Hold => pequeños pulsos que crean ascenso controlado (no exagerado)

local holdImpulse = 4.5         -- incremento Y por pulso mientras se mantiene (ajustable)
local holdInterval = 0.12       -- frecuencia de pulsos
local maxHoldY = 55             -- límite de velocidad vertical mientras se mantiene

UIS.JumpRequest:Connect(function()
    if not multiJumpEnabled or not humanoid or not rootPart then return end
    pcall(function()
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        humanoid.Jump = true
    end)
    -- marca posibilidad de hold tras tap
    holdingJump = true
    lastHoldPulse = tick()
    task.delay(0.55, function()
        if tick() - lastHoldPulse > 0.52 then holdingJump = false end
    end)
end)

UIS.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.Space then
            holdingJump = true
            lastHoldPulse = tick()
        elseif input.KeyCode == Enum.KeyCode.LeftControl then
            UI.Frame.Visible = not UI.Frame.Visible
            if UI.Frame.Visible then UI.ShowMessage("🔓 Panel mostrado") else UI.ShowMessage("🔒 Panel minimizado") end
        end
    end
end)
UIS.InputEnded:Connect(function(input, gpe)
    if gpe then return end
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Space then
        holdingJump = false
    end
end)

-- aplicar pulsos de hold con Heartbeat
RunService.Heartbeat:Connect(function(dt)
    if multiJumpEnabled and holdingJump and humanoid and rootPart then
        local now = tick()
        if now - lastHoldPulse >= holdInterval then
            lastHoldPulse = now
            pcall(function()
                local v = rootPart.Velocity
                local newY = math.min(v.Y + holdImpulse, maxHoldY)
                rootPart.Velocity = Vector3.new(v.X, newY, v.Z)
            end)
        end
    end

    -- mantener noclip (sin cambios)
    if noclipEnabled and char then
        for _,pn in pairs({"HumanoidRootPart","Torso","UpperTorso","LowerTorso","Head"}) do
            local p = char:FindFirstChild(pn)
            if p and p:IsA("BasePart") then p.CanCollide = false end
        end
    end
end)

-- Toggle Multi Jump (UI)
UI.CreateOption("Multi Jump", function()
    multiJumpEnabled = not multiJumpEnabled
    if multiJumpEnabled then
        UI.ShowMessage("🟢 Multi Jump activado")
    else
        holdingJump = false
        UI.ShowMessage("🔴 Multi Jump desactivado")
    end
end)

-- Speed Boost (idéntico)
_G.Emerson_SpeedBoost_Active = false
UI.CreateOption("Speed Boost", function()
    speedBoostEnabled = not speedBoostEnabled
    _G.Emerson_SpeedBoost_Active = speedBoostEnabled
    if speedBoostEnabled then
        if humanoid then pcall(function() humanoid.WalkSpeed = 48 end) end
        UI.ShowMessage("🟢 Speed Boost activado")
    else
        if humanoid then pcall(function() humanoid.WalkSpeed = 16 end) end
        UI.ShowMessage("🔴 Speed Boost desactivado")
    end
end)

-- Noclip (idéntico)
UI.CreateOption("Noclip", function()
    noclipEnabled = not noclipEnabled
    UI.ShowMessage(noclipEnabled and "🟢 Noclip activado" or "🔴 Noclip desactivado")
end)

-- mantener collisions off while noclip
RunService.Stepped:Connect(function()
    if noclipEnabled and LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                part.CanCollide = false
            end
        end
    end
end)

-- rebind on respawn
Players.LocalPlayer.CharacterAdded:Connect(function(c) bindCharacter(c) end)

-- mensaje inicial
UI.ShowMessage("✅ Emerson Hub v2.6.6 cargado. (UI v2.6.2 + MultiJump normal + Confirmación V2.6.3)")
